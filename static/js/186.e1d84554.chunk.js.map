{"version":3,"file":"static/js/186.e1d84554.chunk.js","mappings":"6JAWA,IATe,WACP,OAAO,SAAC,KAAD,CACXA,OAAO,MACPC,MAAM,MACNC,MAAM,OACNC,UAAU,c,qHCkCd,UApCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfFC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,2FAC1BF,GAAW,GADe,kBAGAG,EAAAA,EAAAA,aAAiBT,GAHjB,OAGhBG,EAHgB,OAItBC,EAAWD,GAJW,gDAMtBO,QAAQC,IAAR,MANsB,yBAQtBL,GAAW,GARW,4EAAH,qDAWvBE,MACC,CAACR,KAEM,gCACGK,IAAW,SAAC,IAAD,IACL,IAAnBF,EAAQS,SAAkB,0BACtB,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACM,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFRF,EAAOG,WAOC,IAAnBd,EAAQS,SAAiB,2E,yECnCjCM,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGVC,EAAa,mCAAG,oGACGF,IAAAA,IAAA,qCAAwCC,IAD3C,cACdE,EADc,yBAEbA,EAASC,KAAKC,SAFD,2CAAH,qDAKbC,EAAoB,mCAAG,WAAOC,GAAP,uFACNP,IAAAA,IAAA,+BAAkCC,EAAlC,4DAA6FM,IADvF,cACvBJ,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKpBG,EAAiB,mCAAG,WAAO1B,GAAP,uFACHkB,IAAAA,IAAA,gBAAmBlB,EAAnB,oBAAsCmB,EAAtC,oBADG,cACpBE,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKjBK,EAAW,mCAAG,WAAO3B,GAAP,uFACGkB,IAAAA,IAAA,gBAAmBlB,EAAnB,4BAA8CmB,EAA9C,oBADH,cACdE,EADc,yBAEbA,EAASC,KAAKM,MAFD,2CAAH,sDAKXC,EAAY,mCAAG,WAAO7B,GAAP,uFACEkB,IAAAA,IAAA,gBAAmBlB,EAAnB,4BAA8CmB,EAA9C,2BADF,cACfE,EADe,yBAEdA,EAASC,KAAKC,SAFA,2CAAH,sDAKZd,EAAM,CACRW,cAAAA,EACAI,qBAAAA,EACAE,kBAAAA,EACAC,YAAAA,EACAE,aAAAA,GAGJ","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n        return <ThreeDots\n    height=\"100\"\n    width=\"100\"\n    color='grey'\n    ariaLabel='loading'\n  />\n}\n    \nexport default Loader;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n      const onActorsOfMovie = async () => {\n    setLoading(true);\n      try {\n        const reviews = await api.fetchReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n    return (<>\n              {loading && <Loader />}\n{(reviews.length !== 0) && (<div>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n      </div>)}\n      {(reviews.length === 0) && <div>We don't have any reviews for this movie</div>}  \n      </>)\n};\n\nexport default Reviews;\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '9af9995e042723d75d96d38fad102c15';\n\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchByKeyword = async (keyword) => {\nconst response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`);\nreturn response.data.results;    \n}\n\nconst fetchMovieDetalis = async (movieId) => {\nconst response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\nreturn response.data;     \n}\n\nconst fetchActors = async (movieId) => {\nconst response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\nreturn response.data.cast;     \n}\n\nconst fetchReviews = async (movieId) => {\nconst response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\nreturn response.data.results;     \n}\n\nconst api = {\n    fetchTrending,\n    fetchSearchByKeyword,\n    fetchMovieDetalis,\n    fetchActors,\n    fetchReviews,\n};\n\nexport default api;\n\n\n"],"names":["height","width","color","ariaLabel","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","onActorsOfMovie","api","console","log","length","map","review","author","content","id","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetalis","fetchActors","cast","fetchReviews"],"sourceRoot":""}